Recoverable Error

Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

See more info here: https://nextjs.org/docs/messages/react-hydration-error


  ...
    <RenderFromTemplateContext>
      <ScrollAndFocusHandler segmentPath={[...]}>
        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>
          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>
            <LoadingBoundary loading={null}>
              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>
                <HTTPAccessFallbackErrorBoundary pathname="/dashboard" notFound={<SegmentViewNode>} forbidden={undefined} ...>
                  <RedirectBoundary>
                    <RedirectErrorBoundary router={{...}}>
                      <InnerLayoutRouter url="/dashboard" tree={[...]} cacheNode={{lazyData:null, ...}} ...>
                        <SegmentViewNode type="layout" pagePath="dashboard/...">
                          <SegmentTrieNode>
                          <ClientSegmentRoot Component={function DashboardLayout} slots={{...}} params={{}}>
                            <DashboardLayout params={Promise}>
                              <div
+                               className="flex h-screen overflow-hidden"
-                               className="flex h-screen  overflow-hidden"
                              >
                                ...
                                  <TooltipProvider delayDuration={300}>
                                    <TooltipProviderProvider scope={undefined} isOpenDelayed={true} delayDuration={300} ...>
                                      <div
+                                       className="rounded-none transition-all duration-300 relative w-16 h-full"
-                                       className="border bg-card text-card-foreground shadow-sm rounded-none transiti..."
                                      >
                                        <div
+                                         className="p-4 h-full flex flex-col justify-between"
-                                         className="p-4 h-full flex flex-col rounded-none"
                                        >
                                          <div
+                                           className="text-muted-foreground"
-                                           className="mb-4 pb-4 border-b"
                                          >
+                                           <div className="mb-4 flex items-center justify-center">
-                                           <a className="flex items-center justify-center" href="/dashboard">
                                            ...
                                          ...
                                ...
                      ...
          ...
app/common/dashboard/Sidebar.tsx (165:13) @ Sidebar


  163 |           <div className="text-muted-foreground">
  164 |             {/* Toggle Button */}
> 165 |             <div
      |             ^
  166 |               className={cn(
  167 |                 'mb-4 flex items-center',
  168 |                 isExpanded ? 'justify-between' : 'justify-center'
Call Stack
14

Show 11 ignore-listed frame(s)
div
<anonymous>
Sidebar
app/common/dashboard/Sidebar.tsx (165:13)
DashboardLayout
app/dashboard/layout.tsx (29:11)