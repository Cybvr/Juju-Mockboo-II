Uncaught Error: Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HotReload assetPrefix="" globalError={[...]}>
      <AppDevOverlayErrorBoundary globalError={[...]}>
        <ReplaySsrOnlyErrors>
        <DevRootHTTPAccessFallbackBoundary>
          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>
            <HTTPAccessFallbackErrorBoundary pathname="/dashboard..." notFound={<NotAllowedRootHTTPFallbackError>} ...>
              <RedirectBoundary>
                <RedirectErrorBoundary router={{...}}>
                  <Head>
                  <__next_root_layout_boundary__>
                    <SegmentViewNode type="layout" pagePath="layout.tsx">
                      <SegmentTrieNode>
                      <link>
                      <RootLayout>
                        <html
                          lang="en"
-                         className="dark"
-                         style={{color-scheme:"dark"}}
                        >
                          <head>
                          ...
                            <SegmentViewNode type="page" pagePath="dashboard/...">
                              <SegmentTrieNode>
                              <ClientPageRoot Component={function StoryPage} searchParams={{}} params={{id:"pRqNqO..."}}>
                                <StoryPage params={Promise} searchParams={Promise}>
+                                 <main
+                                   className="min-h-screen w-full  transition-colors duration-300 flex items-center j..."
+                                 >
-                                 <div className="flex min-h-screen items-center justify-center">
                  ...

    at throwOnHydrationMismatch (